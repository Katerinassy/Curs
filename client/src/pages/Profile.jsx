import { useEffect, useState } from "react";
import "../style/profile.css";

function Profile() {
  const [user, setUser] = useState(null);
  const [orders, setOrders] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const currentUser = localStorage.getItem("currentUser");
    if (currentUser) {
      setUser(currentUser);
      fetchUserOrders();
    } else {
      setLoading(false);
    }
  }, []);

  const fetchUserOrders = async () => {
    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π userId, –∫–∞–∫ –≤ –∫–æ—Ä–∑–∏–Ω–µ
      const userId = "68f10b0e1cd3b39074630ad9";
      
      const response = await fetch(`http://localhost:5000/api/orders/user/${userId}`);
      
      if (response.ok) {
        const ordersData = await response.json();
        console.log("–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã:", ordersData);
        setOrders(ordersData);
      } else {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞–∫–∞–∑–æ–≤");
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:", error);
    } finally {
      setLoading(false);
    }
  };

  const formatDate = (dateString) => {
    return new Date(dateString).toLocaleDateString('ru-RU', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });
  };

  const getStatusText = (status) => {
    const statusMap = {
      'pending': '‚è≥ –û–∂–∏–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏',
      'processing': 'üîÑ –í –æ–±—Ä–∞–±–æ—Ç–∫–µ',
      'shipped': 'üöö –û—Ç–ø—Ä–∞–≤–ª–µ–Ω',
      'delivered': '‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω',
      'cancelled': '‚ùå –û—Ç–º–µ–Ω–µ–Ω'
    };
    return statusMap[status] || status;
  };

  if (!user) {
    return (
      <div className="profile-container">
        <p className="not-logged">–í—ã –Ω–µ –≤–æ—à–ª–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç</p>
        <div className="profile-actions">
          <a href="/login" className="btn btn-primary">–í–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç</a>
        </div>
      </div>
    );
  }

  if (loading) {
    return (
      <div className="profile-container">
        <div className="loading">–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–∫–∞–∑–æ–≤...</div>
      </div>
    );
  }

  return (
    <div className="profile-container">
      <h2 className="profile-title">üë§ –ü—Ä–æ—Ñ–∏–ª—å</h2>
      <p className="profile-email">–í–∞—à email: <b>{user}</b></p>

      <h3 className="profile-subtitle">üì¶ –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤</h3>
      
      {orders.length === 0 ? (
        <p className="no-orders">–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤.</p>
      ) : (
        <div className="orders-list">
          {orders.map((order) => (
            <div key={order._id} className="order-card">
              <div className="order-header">
                <h4>–ó–∞–∫–∞–∑ #{order.orderNumber}</h4>
                <span className={`status status-${order.status}`}>
                  {getStatusText(order.status)}
                </span>
              </div>
              
              <div className="order-info">
                <p><b>–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞:</b> {formatDate(order.createdAt)}</p>
                <p><b>–ü–æ–ª—É—á–∞—Ç–µ–ª—å:</b> {order.shippingAddress?.firstName} {order.shippingAddress?.lastName}</p>
                <p><b>–ê–¥—Ä–µ—Å:</b> {order.shippingAddress?.address}</p>
                <p><b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {order.shippingAddress?.phone}</p>
                <p className="order-total"><b>–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞:</b> ${order.totalAmount}</p>
              </div>

              <div className="order-items-section">
                <h5>–¢–æ–≤–∞—Ä—ã:</h5>
                <div className="order-items">
                  {order.items.map((item, index) => (
                    <div key={index} className="order-item">
                      <div className="item-info">
                        <span className="item-name">{item.productName}</span>
                        <span className="item-quantity">√ó {item.quantity}</span>
                        <span className="item-price">${item.price}</span>
                      </div>
                      <div className="item-total">
                        ${(item.price * item.quantity).toFixed(2)}
                      </div>
                    </div>
                  ))}
                </div>
              </div>

              <div className="order-footer">
                <p className="payment-status">
                  <b>–û–ø–ª–∞—Ç–∞:</b> {order.paymentStatus === 'paid' ? '‚úÖ –û–ø–ª–∞—á–µ–Ω–æ' : '‚è≥ –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã'}
                </p>
                {order.status === 'shipped' && (
                  <p className="delivery-info">üöö –î–æ—Å—Ç–∞–≤–∫–∞: –≤ –ø—É—Ç–∏ (1‚Äì2 –¥–Ω—è)</p>
                )}
              </div>
            </div>
          ))}
        </div>
      )}

      <div className="profile-actions">
        <a href="/cart" className="btn btn-primary">–ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É</a>
        <button onClick={fetchUserOrders} className="btn btn-secondary">
          –û–±–Ω–æ–≤–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∑–∞–∫–∞–∑–æ–≤
        </button>
      </div>
    </div>
  );
}

export default Profile;